{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["api","App","useState","query","setQuery","weather","setWeather","className","main","temp","placeholder","onChange","e","target","value","onKeyPress","evt","key","fetch","then","res","json","result","console","log","name","sys","country","d","day","getDay","month","getMonth","year","getFullYear","date","getDate","dateTrack","Date","Math","round","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uMAGMA,EACE,mCADFA,EAEG,2CAoFMC,MA9Ef,WAAgB,IAAD,EAEaC,mBAAS,IAFtB,mBAENC,EAFM,KAECC,EAFD,OAGgBF,mBAAS,IAHzB,mBAGNG,EAHM,KAGGC,EAHH,KA+Bb,OAGE,qBAAKC,UACoB,oBAAhBF,EAAQG,MAA0BH,EAAQG,KAAKC,KAAO,GAAO,MAA2B,WADjG,SAEE,iCAEE,qBAAKF,UAAU,aAAf,SACE,uBACEA,UAAU,aACVG,YAAY,YACZC,SAAU,SAAAC,GAAC,OAAIR,EAASQ,EAAEC,OAAOC,QACjCA,MAAOX,EACPY,WAvCK,SAAAC,GACE,UAAZA,EAAIC,KACLC,MAAM,GAAD,OAAIlB,EAAJ,qBAAyBG,EAAzB,+BAAqDH,IACzDmB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJhB,EAAWgB,GACXlB,EAAS,IACTmB,QAAQC,IAAIF,WAmCZ,wGAG0B,oBAAhBjB,EAAQG,KAChB,gCACE,sBAAKD,UAAU,eAAf,UACE,sBAAKA,UAAU,gBAAf,UAAgCF,EAAQoB,KAAxC,KAAgDpB,EAAQqB,IAAIC,WAC5D,qBAAKpB,UAAU,OAAf,SArCZ,SAAmBqB,GAEjB,IAIIC,EAFK,CAAC,SAAS,SAAS,UAAU,YAAY,WAAW,SAAS,YAEzDD,EAAEE,UACXC,EALO,CAAC,UAAU,WAAW,QAAQ,QAAQ,MAAM,OAAO,OAAO,SAAS,YAAY,UAAU,WAAW,YAK9FH,EAAEI,YACfC,EAAKL,EAAEM,cACPC,EAAKP,EAAEQ,UAEX,MAAM,GAAN,OAAUP,EAAV,aAAkBM,EAAlB,YAA0BJ,EAA1B,YAAmCE,GA0BFI,CAAU,IAAIC,WAGvC,sBAAK/B,UAAU,cAAf,UACE,sBAAKA,UAAU,eAAf,UAA+BgC,KAAKC,MAAMnC,EAAQG,KAAKC,MAAvD,WACA,qBAAKF,UAAU,eAAf,SAA+BF,EAAQA,QAAQ,GAAGG,aAItD,mCACE,sBAAKD,UAAU,iBAAf,UACE,qBAAKA,UAAU,eAAf,yBACA,qBAAKA,UAAU,eAAf,4CCjECkC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxB,MAAK,YAAkD,IAA/CyB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.21f1f41b.chunk.js","sourcesContent":["import React , { useState } from 'react';\n\n\nconst api={\n  key : \"731bc6c8903f03a0401aa451952eeafe\",\n  base : \"https://api.openweathermap.org/data/2.5/\"\n}\n\n\n\n\nfunction App() {\n\n  const [query, setQuery] = useState('')\n  const [weather, setWeather] =useState({}) \n\n  const search = evt => {\n    if(evt.key === \"Enter\"){\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n      .then(res => res.json())\n      .then(result =>{\n        setWeather(result);\n        setQuery('');\n        console.log(result)\n      })\n    }\n  }\n  \n  function dateTrack(d){\n  \n    let months=[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];\n\n    let days=[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"];\n\n    let day=days[d.getDay()];\n    let month=months[d.getMonth()];\n    let year=d.getFullYear();\n    let date=d.getDate();\n\n    return `${day}, ${date} ${month} ${year}`;\n  }\n\n  return (\n    \n    \n    <div className=\n    {(typeof weather.main != \"undefined\")  ?( (weather.main.temp > 20) ? (\"app\") : (\"app-cold\") ) : (\"app-cold\")}>\n      <main>\n        \n        <div className=\"search-bar\">\n          <input \n            className=\"search-box\" \n            placeholder=\"Search...\"\n            onChange={e => setQuery(e.target.value)}\n            value={query} \n            onKeyPress={search}\n          />\n        </div>\n        <footer>\n              Copyright © 2020-2021 Satyam'sWeatherApp . All rights reserved.\n        </footer>\n        {( typeof weather.main != \"undefined\" ) ? (\n          <div>\n            <div className=\"location-box\">\n              <div className=\"location-city\">{weather.name}, {weather.sys.country}</div>\n              <div className=\"date\">{dateTrack(new Date())}</div>\n            </div>\n\n            <div className=\"weather-box\">\n              <div className=\"weather-temp\">{Math.round(weather.main.temp)}°C</div>  \n              <div className=\"weather-cond\">{weather.weather[0].main}</div>\n            </div> \n          </div>\n        ) : (\n          <>\n            <div className=\"default-screen\">\n              <div className=\"default-text\">Weather App</div>\n              <div className=\"default-hint\">Search Any Location</div>\n            </div>\n            \n          </>\n        )}\n         \n\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}